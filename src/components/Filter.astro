---
import Select from "../components/Select.astro";
import { QueryParams } from "../lib/constants/query-params.constants";

const { category, sortBy } = Astro.props;

const categoryOptions = [
  { key: "", text: "Any" },
  { key: "mmo", text: "MMO" },
  { key: "mmorpg", text: "MMORPG" },
  { key: "shooter", text: "Shooter" },
  { key: "strategy", text: "Strategy" },
  { key: "moba", text: "Moba" },
  { key: "card", text: "Card Games" },
  { key: "racing", text: "Racing" },
  { key: "sports", text: "Sports" },
  { key: "social", text: "Social" },
  { key: "fighting", text: "Fighting" },
  { key: "mmofps", text: "MMOFPS" },
  { key: "action-rpg", text: "Action RPG" },
  { key: "sandbox", text: "Sandbox" },
  { key: "open-world", text: "Open World" },
  { key: "survival", text: "Survival" },
  { key: "battle-royale", text: "Battle Royale" },
  { key: "mmotps", text: "MMOTPS" },
  { key: "anime", text: "Anime" },
  { key: "pvp", text: "PvP" },
  { key: "pve", text: "PvE" },
  { key: "pixel", text: "Pixel" },
  { key: "mmorts", text: "MMORTS" },
  { key: "fantasy", text: "Fantasy" },
  { key: "sci-fi", text: "Sci-Fi" },
  { key: "action", text: "Action" },
  { key: "voxel", text: "Voxel" },
  { key: "zombie", text: "Zombie" },
  { key: "turn-based", text: "Turn-Based" },
  { key: "first-person", text: "First Person View" },
  { key: "third-Person", text: "Third Person View" },
  { key: "top-down", text: "Top-Down View" },
  { key: "3d", text: "3D Graphics" },
  { key: "2d", text: "2D Graphics" },
  { key: "tank", text: "Tank" },
  { key: "space", text: "Space" },
  { key: "sailing", text: "Sailing" },
  { key: "side-scroller", text: "Side Scroller" },
  { key: "superhero", text: "Superhero" },
  { key: "permadeath", text: "Permadeath" },
];

const sortByOptions = [
  { key: "relevance", text: "Relevance" },
  { key: "popularity", text: "Popularity" },
  { key: "release-date", text: "Release date" },
  { key: "alphabetical", text: "Alphabetical" },
];
---

<form
  method="post"
  class="flex flex-col gap-x-28 justify-center gap-y-5 w-full desktop-mid:flex-row desktop-mid:gap-y-0"
>
  <Select name={QueryParams.CATEGORY} label="Category:">
    {
      categoryOptions.map((option) => (
        <option selected={category === option.key} value={option.key}>
          {option.text}
        </option>
      ))
    }
  </Select>
  <Select name={QueryParams.SORTBY} label="Sort by:">
    {
      sortByOptions.map((option) => (
        <option selected={sortBy === option.key} value={option.key}>
          {option.text}
        </option>
      ))
    }
  </Select>
  <button
    type="submit"
    class="bg-dark h-12 w-28 self-center text-lg rounded-lg transition-all duration-150 hover:opacity-85 hover:bg-secondary"
    >Filter</button
  >
</form>
